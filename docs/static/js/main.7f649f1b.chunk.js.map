{"version":3,"sources":["components/menu/MenuItem.js","components/menu/Menu.js","components/data-store/IndexedDB.js","components/data-store/Monsters.js","components/data-store/MonsterImages.js","components/monsters/UnitConversionCalculator.js","components/monsters/selectors/CRSelector.js","components/monsters/MonsterViewerHeader.js","components/modals/SimpleModal.js","components/monsters/selectors/SizeSelector.js","components/monsters/selectors/TypeSelector.js","components/monsters/selectors/AlignmentSelector.js","components/monsters/modal/NameSection.js","components/monsters/modal/CombatSection.js","components/monsters/modal/StatSection.js","components/monsters/selectors/SkillSelector.js","components/monsters/selectors/DamageTypeSelector.js","components/monsters/selectors/ConditionSelector.js","components/monsters/modal/SkillsSection.js","components/monsters/modal/AbilitiesSection.js","components/monsters/modal/ActionsSection.js","components/monsters/modal/LegendaryActionsSection.js","components/monsters/modal/MonsterImageSection.js","components/monsters/modal/DescriptionSection.js","components/monsters/modal/MonsterModal.js","components/monsters/MonsterViewer.js","RootMenu.js","App.js","serviceWorker.js","index.js"],"names":["MenuItem","_ref","value","onSelect","react_default","a","createElement","className","key","onClick","defaultProps","Menu","menuItems","map","components_menu_MenuItem","database","stores","addStore","name","keyData","concat","upgrade","db","oldVersion","newVersion","transaction","forEach","store","objectStoreNames","contains","console","log","createObjectStore","getDatabase","_","keyPath","addMonster","monster","put","removeMonsterById","id","delete","buildMonsterId","xp","autoIncrement","calculateModStr","stat","numberToString","Math","floor","calculateMod","number","numbStr","toString","indexOf","calculateCR","xpToCR","0","25","50","100","200","450","700","1100","1800","2300","2900","3900","5000","5900","7200","8400","10000","11500","13000","15000","18000","20000","22000","25000","33000","41000","50000","62000","75000","90000","105000","120000","135000","155000","CRSelector","onChange","showSelect","disabled","hidden","Object","keys","MonsterViewerHeader","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","monsterList","loading","_this$props","onAddMonster","filterXp","onXPFilter","onNameFilter","filterName","placeholder","type","selectors_CRSelector","Component","SimpleModal","show","children","showHideClassName","SizeSelector","TypeSelector","AlignmentSelector","NameSection","editable","selectors_SizeSelector","size","selectors_TypeSelector","selectors_AlignmentSelector","alignment","CombatSection","onChangeNumber","ac","hp","speed","StatSection","stats","str","dex","con","int","wis","cha","SkillSelector","DamageTypeSelector","ConditionSelector","SkillsSection","onRemoveElement","bind","assertThisInitialized","onAddElement","prop","index","_this2","list","filter","element","idx","target","_this3","_this4","skill","modifier","skills","selectors_SkillSelector","damageVulnerabilities","vulnerability","selectors_DamageTypeSelector","damageResistances","resistance","damageImmunities","immunity","conditionImmunities","selectors_ConditionSelector","senses","languages","length","AbilitiesSection","descr","abilities","ability","ActionsSection","actions","action","property","split","legendaryActions","summary","MonsterImageSection","pictureURL","loadingImage","onDrop","imageKey","get","then","result","setState","catch","e","picture","reader","FileReader","onload","onImageSet","readAsDataURL","_this$state","style","maxHeight","alt","src","compiled_default","withIcon","buttonText","imgExtension","maxFileSize","noop","DescriptionSection","description","setPathValue","object","path","splitPath","location","i","currentPath","MonsterModal","event","newMonster","clone","onMonsterChange","parseInt","onSave","onCancel","onDelete","onToggleEdit","components_modals_SimpleModal","modal_NameSection","modal_CombatSection","modal_StatSection","modal_SkillsSection","modal_AbilitiesSection","modal_ActionsSection","LegendaryActionsSection","modal_DescriptionSection","modal_MonsterImageSection","sortMonsterList","sort","b","nameA","toUpperCase","nameB","MonsterViewer","selectedMonster","imageURL","editing","changeMonster","onDeleteMonster","saveMonsterModel","cancelMonsterModal","changeXPFilter","changeNameFilter","mon","monsterImage","oldId","getAll","error","_this$state2","showSelectedMonster","formattedFilterName","components_monsters_MonsterViewerHeader","monsters_modal_MonsterModal","nameMatch","rootMenu","Monster Viewer","components_monsters_MonsterViewer","App","currentLocation","databaseLoaded","getDisplayElement","backToRootMenu","menuSelection","openDB","components_menu_Menu","displayElement","MoonLoader_default","sizeUnit","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","src_App_0","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.7f649f1b.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MenuItem.css';\n\nconst MenuItem = ({ value , onSelect }) => {\n    return (\n        <div className=\"menu-item\" key={value} onClick={onSelect(value)}>{value}</div>\n    );\n};\n\nMenuItem.propTypes = {\n    value: PropTypes.string.isRequired,\n    onSelect: PropTypes.func.isRequired,\n};\n\nMenuItem.defaultProps = {\n\n};\n\nexport default MenuItem;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from './MenuItem';\n\nimport './Menu.css';\n\nconst Menu = ({ menuItems, onSelect }) => {\n    return (\n        <div className=\"menu-page\">\n            {menuItems.map(value => (<MenuItem key={value} value={value} onSelect={onSelect}/>))}\n        </div>\n    );\n};\n\nMenu.propTypes = {\n    menuItems: PropTypes.arrayOf(PropTypes.string).isRequired,\n    onSelect: PropTypes.func.isRequired,\n}\n\nMenu.defaultProps = {\n\n}\n\nexport default Menu;","import { openDB } from 'idb';\n\nlet database = null; //loading\n\nlet stores = [];\n\nconst databaseName = '5eEncounters';\n\nexport const addStore = (name, keyData) => {\n    stores = stores.concat([{ name, keyData }]);\n};\n\nconst upgrade = (db, oldVersion, newVersion, transaction) => {\n    stores.forEach(store => {\n        if(!db.objectStoreNames.contains(store.name)) {\n            console.log('Adding datastore: ', store.name);\n            db.createObjectStore(store.name, store.keyData);\n        }\n    });\n};\n\nexport const openDatabase = _ => {\n    return openDB(databaseName, 1, { upgrade, }).then(db => {\n        database = db;\n    });\n};\n\nexport const getDatabase = _ => database;\n","import { getDatabase, addStore } from './IndexedDB';\n\nconst storeName = 'monsters';\n\naddStore(storeName, {keyPath: 'id'});\n\nexport const addMonster = monster => {\n    const db = getDatabase();\n    return db.put(storeName, monster);\n};\n\nexport const removeMonsterById = id => {\n    const db = getDatabase();\n    return db.delete(storeName, id);\n};\n\nexport const getAllMonsters = _ => getDatabase().getAll(storeName);\n\nexport const buildEmptyMonster = _ => ({\n    name: '',\n    size: 'None',\n    type: 'None',\n    alignment: 'None',\n    stats: {\n        str: 0,\n        dex: 0,\n        con: 0,\n        int: 0,\n        wis: 0,\n        cha: 0,\n    },\n    skills: [], //{ skill, modifier }\n    xp: 0,\n    ac: 0,\n    hp: 0,\n    speed: 0,\n    damageVulnerabilities: [],\n    damageImmunities: [],\n    damageResistances: [],\n    conditionImmunities: [],\n    senses: '',\n    languages: '',\n    actions: [], //{name, descr}\n    abilities: [], //{name, descr}\n    legendaryActions: {\n        summary: '',\n        actions: [],\n    },\n    description: '',\n    imageKey: null,\n});\n\nexport const buildMonsterId = monster => {\n    monster.id = monster.name + monster.xp;\n    return monster;\n};\n","import { getDatabase, addStore } from './IndexedDB';\n\nconst storeName = 'monster-images';\n\naddStore(storeName, {autoIncrement: true});\n\nexport const addMonsterImage = monsterImage => {\n    const db = getDatabase();\n    return db.put(storeName, monsterImage);\n};\n\nexport const removeMonsterImageById = id => {\n    const db = getDatabase();\n    return db.delete(storeName, id);\n};\n\nexport const getMonsterImage = id => getDatabase().get(storeName, id);","export const calculateMod = stat => Math.floor((stat - 10) / 2);\n\nexport const calculateModStr = stat => numberToString(calculateMod(stat));\n\nexport const numberToString = number => {\n    let numbStr = number.toString();\n    if(numbStr.indexOf('-') < 0) {\n        numbStr = `+${numbStr}`;\n    }\n    return numbStr;\n}\n\nexport const calculateCR = xp => xpToCR[xp];\n\nexport const xpToCR = {\n    0: '0',\n    25: '1/8',\n    50: '1/4',\n    100: '1/2',\n    200: '1',\n    450: '2',\n    700: '3',\n    1100: '4',\n    1800: '5',\n    2300: '6',\n    2900: '7',\n    3900: '8',\n    5000: '9',\n    5900: '10',\n    7200: '11',\n    8400: '12',\n    10000: '13',\n    11500: '14',\n    13000: '15',\n    15000: '16',\n    18000: '17',\n    20000: '18',\n    22000: '19',\n    25000: '20',\n    33000: '21',\n    41000: '22',\n    50000: '23',\n    62000: '24',\n    75000: '25',\n    90000: '26',\n    105000: '27',\n    120000: '28',\n    135000: '29',\n    155000: '30',\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { xpToCR } from '../UnitConversionCalculator';\n\nconst CRSelector = ({ onChange, value, showSelect }) => {\n    return (\n        <select value={value} onChange={onChange}>\n            <option value='' disabled={!showSelect} hidden={!showSelect}>Select CR</option>\n            { Object.keys(xpToCR).map(xp => (\n                <option key={xp} value={xp}>{`${xpToCR[xp]} (${xp} exp)`}</option>\n            ))}\n        </select>\n    );\n};\n\nCRSelector.propTypes = {\n    onChange: PropTypes.func.isRequired,\n    value: PropTypes.string.isRequired,\n    showSelect: PropTypes.bool,\n}\n\nCRSelector.defaultProps = {\n    showSelect: false,\n}\n\nexport default CRSelector;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport CRSelector from './selectors/CRSelector';\n\nimport './MonsterViewerHeader.css';\n\nclass MonsterViewerHeader extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            monsterList: [],\n            loading: true,\n        };\n        /*this.getDisplayElement = this.getDisplayElement.bind(this);*/\n    }\n\n    render() {\n        const { onAddMonster, filterXp, onXPFilter, onNameFilter, filterName } = this.props;\n        return (\n            <div className='monster-viewer-header'>\n                <div className='mvh-row'>\n                    <input\n                        placeholder='Filter By Monster Name'\n                        type='search'\n                        value={filterName || ''}\n                        onChange={onNameFilter}\n                    />\n                    <div className='mvh-left-margin'>\n                        <CRSelector\n                            value={filterXp == null ? '' : filterXp.toString()}\n                            onChange={onXPFilter}\n                            showSelect={true}\n                        />\n                    </div>\n                </div>\n                <button onClick={onAddMonster}>Add Monster</button>\n            </div>\n        );\n    }\n}\n\nMonsterViewerHeader.propTypes = {\n    filterXp: PropTypes.number,\n    filterName: PropTypes.string,\n    onAddMonster: PropTypes.func.isRequired,\n    onXPFilter: PropTypes.func.isRequired,\n    onNameFilter: PropTypes.func.isRequired,\n};\n\nMonsterViewerHeader.defaultProps = {\n    filterXp: null,\n    filterName: null,\n};\n\nexport default MonsterViewerHeader;\n","import React from 'react';\n\nimport './SimpleModal.css';\n\nconst SimpleModal = ({ show, children }) => {\n    const showHideClassName = show ? \"modal display-block\" : \"modal display-none\";\n    return (\n      <div className={showHideClassName}>\n        <section className=\"modal-main\">\n          {children}\n        </section>\n      </div>\n    );\n  };\n\nexport default SimpleModal;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst SizeSelector = ({ onChange, value }) => {\n    return (\n        <select value={value} onChange={onChange}>\n            <option value=\"None\" disabled hidden>Select Size</option>\n            <option value=\"Tiny\">Tiny</option>\n            <option value=\"Small\">Small</option>\n            <option value=\"Medium\">Medium</option>\n            <option value=\"Large\">Large</option>\n            <option value=\"Huge\">Huge</option>\n            <option value=\"Gargantuan\">Gargantuan</option>\n        </select>\n    );\n};\n\nSizeSelector.propTypes = {\n    onChange: PropTypes.func.isRequired,\n    value: PropTypes.string\n}\n\nSizeSelector.defaultProps = {\n    value: 'None'\n}\n\nexport default SizeSelector;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TypeSelector = ({ onChange, value }) => {\n    return (\n        <select value={value} onChange={onChange}>\n            <option value=\"None\" disabled hidden>Select Monster Type</option>\n            <option value=\"Aberration\">Aberration</option>\n            <option value=\"Beast\">Beast</option>\n            <option value=\"Celestial\">Celestial</option>\n            <option value=\"Construct\">Construct</option>\n            <option value=\"Dragon\">Dragon</option>\n            <option value=\"Elemental\">Elemental</option>\n            <option value=\"Fey\">Fey</option>\n            <option value=\"Fiend\">Fiend</option>\n            <option value=\"Giant\">Giant</option>\n            <option value=\"Humanoid\">Humanoid</option>\n            <option value=\"Monstrosity\">Monstrosity</option>\n            <option value=\"Ooze\">Ooze</option>\n            <option value=\"Plant\">Plant</option>\n            <option value=\"Undead\">Undead</option>\n        </select>\n    );\n};\n\nTypeSelector.propTypes = {\n    onChange: PropTypes.func.isRequired,\n    value: PropTypes.string\n}\n\nTypeSelector.defaultProps = {\n    value: 'None'\n}\n\nexport default TypeSelector;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst AlignmentSelector = ({ onChange, value }) => {\n    return (\n        <select value={value} onChange={onChange}>\n            <option value=\"None\" disabled hidden>Select Alignment</option>\n            <option value=\"Unaligned\">Unaligned</option>\n            <option value=\"Lawful Good\">Lawful Good</option>\n            <option value=\"Neutral Good\">Neutral Good</option>\n            <option value=\"Chaotic Good\">Chaotic Good</option>\n            <option value=\"Lawful Neutral\">Lawful Neutral</option>\n            <option value=\"True Neutral\">True Neutral</option>\n            <option value=\"Chaotic Neutral\">Chaotic Neutral</option>\n            <option value=\"Lawful Evil\">Lawful Evil</option>\n            <option value=\"Neutral Evil\">Neutral Evil</option>\n            <option value=\"Chaotic Evil\">Chaotic Evil</option>\n        </select>\n    );\n};\n\nAlignmentSelector.propTypes = {\n    onChange: PropTypes.func.isRequired,\n    value: PropTypes.string\n}\n\nAlignmentSelector.defaultProps = {\n    value: 'None'\n}\n\nexport default AlignmentSelector;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SizeSelector from '../selectors/SizeSelector';\nimport TypeSelector from '../selectors/TypeSelector';\nimport AlignmentSelector from '../selectors/AlignmentSelector';\n\nimport './MonsterModal.css';\n\nconst NameSection = ({ onChange, monster, editable }) => {\n    if(editable) {\n        return (\n            <div className='monster-form-section border-bottom'>\n                <input type='text' placeholder='Monster Name' onChange={onChange('name')} value={monster.name || ''}/>\n                <div className='monster-form-row-section'>\n                    <SizeSelector value={monster.size || 'None'} onChange={onChange('size')}/>\n                    <div className='left-margin'><TypeSelector value={monster.type || 'None'} onChange={onChange('type')}/></div>\n                    <div className='left-margin'><AlignmentSelector value={monster.alignment || 'None'} onChange={onChange('alignment')}/></div>\n                </div>\n            </div>\n        );\n    }\n    return (\n        <div className='monster-form-section border-bottom'>\n            <span className='red-text bold-text'>{monster.name}</span>\n            <span>{`${monster.size} ${monster.type}, ${monster.alignment}`}</span>\n        </div>\n    );\n};\n\nNameSection.propTypes = {\n    onChange: PropTypes.func.isRequired,\n    monster: PropTypes.shape({}).isRequired,\n    editable: PropTypes.bool.isRequired\n}\n\nNameSection.defaultProps = {\n}\n\nexport default NameSection;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MonsterModal.css';\n\nconst CombatSection = ({ onChangeNumber, monster, editable }) => {\n    if(editable) {\n        return (\n            <div className='monster-form-section border-bottom'>\n                <input className=\"top-margin\" type='number' placeholder='AC' onChange={onChangeNumber('ac')} value={monster.ac || ''}/>\n                <input className=\"top-margin\" type='number' placeholder='HP' onChange={onChangeNumber('hp')} value={monster.hp || ''}/>\n                <input className=\"top-margin\" type='number' placeholder='Speed (ft)' onChange={onChangeNumber('speed')} value={monster.speed || ''}/>\n            </div>\n        );\n    }\n    return (\n        <div className='monster-form-section border-bottom'>\n            <div className='row-container'>\n                <span className='red-text bold-text'>Armor Class:&nbsp;</span>\n                <span className='red-text'>{monster.ac}</span>\n            </div>\n            <div className='row-container'>\n                <span className='red-text bold-text'>Hit Points:&nbsp;</span>\n                <span className='red-text'>{monster.hp}</span>\n            </div>\n            <div className='row-container'>\n                <span className='red-text bold-text'>Speed:&nbsp;</span>\n                <span className='red-text'>{monster.speed} ft.</span>\n            </div>\n        </div>\n    );\n};\n\nCombatSection.propTypes = {\n    onChangeNumber: PropTypes.func.isRequired,\n    monster: PropTypes.shape({}).isRequired,\n    editable: PropTypes.bool.isRequired\n}\n\nCombatSection.defaultProps = {\n}\n\nexport default CombatSection;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { calculateModStr } from '../UnitConversionCalculator';\n\nimport './MonsterModal.css';\n\nconst StatSection = ({ onChangeNumber, monster, editable }) => {\n    if(editable) {\n        return (\n            <div className='monster-form-section border-bottom'>\n                <div className=\"row-container center-container\">\n                    <div className=\"col-continer center-container side-margin\">\n                        <input className=\"number-size\" type='number' placeholder='STR' onChange={onChangeNumber('stats.str')} value={monster.stats.str || ''}/>\n                        <div className=\"left-margin\">{calculateModStr(monster.stats.str)}</div>\n                    </div>\n                    <div className=\"col-continer center-container side-margin\">\n                        <input className=\"number-size\" type='number' placeholder='DEX' onChange={onChangeNumber('stats.dex')} value={monster.stats.dex || ''}/>\n                        <div className=\"left-margin\">{calculateModStr(monster.stats.dex)}</div>\n                    </div>\n                    <div className=\"col-continer center-container side-margin\">\n                        <input className=\"number-size\" type='number' placeholder='CON' onChange={onChangeNumber('stats.con')} value={monster.stats.con || ''}/>\n                        <div className=\"left-margin\">{calculateModStr(monster.stats.con)}</div>\n                    </div>\n                    <div className=\"col-continer center-container side-margin\">\n                        <input className=\"number-size\" type='number' placeholder='INT' onChange={onChangeNumber('stats.int')} value={monster.stats.int || ''}/>\n                        <div className=\"left-margin\">{calculateModStr(monster.stats.int)}</div>\n                    </div>\n                    <div className=\"col-continer center-container side-margin\">\n                        <input className=\"number-size\" type='number' placeholder='WIS' onChange={onChangeNumber('stats.wis')} value={monster.stats.wis || ''}/>\n                        <div className=\"left-margin\">{calculateModStr(monster.stats.wis)}</div>\n                    </div>\n                    <div className=\"col-continer center-container side-margin\">\n                        <input className=\"number-size\" type='number' placeholder='CHA' onChange={onChangeNumber('stats.cha')} value={monster.stats.cha || ''}/>\n                        <div className=\"left-margin\">{calculateModStr(monster.stats.cha)}</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n    return (\n        <div className='monster-form-section border-bottom'>\n            <div className=\"row-container center-container\">\n                <div className=\"col-continer center-container side-margin\">\n                    <div className=\"red-text bold-text\">STR</div>\n                    <div className=\"red-text\">{`${monster.stats.str} (${calculateModStr(monster.stats.str)})`}</div>\n                </div>\n                <div className=\"col-continer center-container side-margin\">\n                    <div className=\"red-text bold-text\">DEX</div>\n                    <div className=\"red-text\">{`${monster.stats.dex} (${calculateModStr(monster.stats.dex)})`}</div>\n                </div>\n                <div className=\"col-continer center-container side-margin\">\n                    <div className=\"red-text bold-text\">CON</div>\n                    <div className=\"red-text\">{`${monster.stats.con} (${calculateModStr(monster.stats.con)})`}</div>\n                </div>\n                <div className=\"col-continer center-container side-margin\">\n                    <div className=\"red-text bold-text\">INT</div>\n                    <div className=\"red-text\">{`${monster.stats.int} (${calculateModStr(monster.stats.int)})`}</div>\n                </div>\n                <div className=\"col-continer center-container side-margin\">\n                    <div className=\"red-text bold-text\">WIS</div>\n                    <div className=\"red-text\">{`${monster.stats.wis} (${calculateModStr(monster.stats.wis)})`}</div>\n                </div>\n                <div className=\"col-continer center-container side-margin\">\n                    <div className=\"red-text bold-text\">CHA</div>\n                    <div className=\"red-text\">{`${monster.stats.cha} (${calculateModStr(monster.stats.cha)})`}</div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nStatSection.propTypes = {\n    onChangeNumber: PropTypes.func.isRequired,\n    monster: PropTypes.shape({}).isRequired,\n    editable: PropTypes.bool.isRequired\n}\n\nStatSection.defaultProps = {\n}\n\nexport default StatSection;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst SkillSelector = ({ onChange, value }) => {\n    return (\n        <select value={value} onChange={onChange}>\n            <option value=\"None\" disabled hidden>Select Skill</option>\n            <option value=\"Acrobatics\">Acrobatics</option>\n            <option value=\"Animal Handling\">Animal Handling</option>\n            <option value=\"Arcana\">Arcana</option>\n            <option value=\"Athletics\">Athletics</option>\n            <option value=\"Deception\">Deception</option>\n            <option value=\"History\">History</option>\n            <option value=\"Insight\">Insight</option>\n            <option value=\"Intimidation\">Intimidation</option>\n            <option value=\"Investigation\">Investigation</option>\n            <option value=\"Medicine\">Medicine</option>\n            <option value=\"Nature\">Nature</option>\n            <option value=\"Perception\">Perception</option>\n            <option value=\"Performance\">Performance</option>\n            <option value=\"Persuasion\">Persuasion</option>\n            <option value=\"Religion\">Religion</option>\n            <option value=\"Sleight of Hand\">Sleight of Hand</option>\n            <option value=\"Stealth\">Stealth</option>\n            <option value=\"Survival\">Survival</option>\n        </select>\n    );\n};\n\nSkillSelector.propTypes = {\n    onChange: PropTypes.func.isRequired,\n    value: PropTypes.string\n}\n\nSkillSelector.defaultProps = {\n    value: 'None'\n}\n\nexport default SkillSelector;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst DamageTypeSelector = ({ onChange, value }) => {\n    return (\n        <select value={value} onChange={onChange}>\n            <option value=\"None\" disabled hidden>Select Damage Type</option>\n            <option value=\"Acid\">Acid</option>\n            <option value=\"Bludgeoning\">Bludgeoning</option>\n            <option value=\"Cold\">Cold</option>\n            <option value=\"Fire\">Fire</option>\n            <option value=\"Force\">Force</option>\n            <option value=\"Lightning\">Lightning</option>\n            <option value=\"Necrotic\">Necrotic</option>\n            <option value=\"Piercing\">Piercing</option>\n            <option value=\"Poison\">Poison</option>\n            <option value=\"Psychic\">Psychic</option>\n            <option value=\"Radiant\">Radiant</option>\n            <option value=\"Slashing\">Slashing</option>\n            <option value=\"Thunder\">Thunder</option>\n        </select>\n    );\n};\n\nDamageTypeSelector.propTypes = {\n    onChange: PropTypes.func.isRequired,\n    value: PropTypes.string\n}\n\nDamageTypeSelector.defaultProps = {\n    value: 'None'\n}\n\nexport default DamageTypeSelector;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ConditionSelector = ({ onChange, value }) => {\n    return (\n        <select value={value} onChange={onChange}>\n            <option value=\"None\" disabled hidden>Select Condition</option>\n            <option value=\"Blinded\">Blinded</option>\n            <option value=\"Charmed\">Charmed</option>\n            <option value=\"Deafened\">Deafened</option>\n            <option value=\"Fatigued\">Fatigued</option>\n            <option value=\"Frightened\">Frightened</option>\n            <option value=\"Grappled\">Grappled</option>\n            <option value=\"Incapacitated\">Incapacitated</option>\n            <option value=\"Invisible\">Invisible</option>\n            <option value=\"Paralyzed\">Paralyzed</option>\n            <option value=\"Petrified\">Petrified</option>\n            <option value=\"Poisoned\">Poisoned</option>\n            <option value=\"Prone\">Prone</option>\n            <option value=\"Restrained\">Restrained</option>\n            <option value=\"Stunned\">Stunned</option>\n            <option value=\"Unconscious\">Unconscious</option>\n            <option value=\"Exhaustion\">Exhaustion</option>\n        </select>\n    );\n};\n\nConditionSelector.propTypes = {\n    onChange: PropTypes.func.isRequired,\n    value: PropTypes.string\n}\n\nConditionSelector.defaultProps = {\n    value: 'None'\n}\n\nexport default ConditionSelector;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { numberToString, calculateCR } from '../UnitConversionCalculator';\nimport SkillSelector from '../selectors/SkillSelector';\nimport DamageTypeSelector from '../selectors/DamageTypeSelector';\nimport ConditionSelector from '../selectors/ConditionSelector';\n\nimport './MonsterModal.css';\nimport CRSelector from '../selectors/CRSelector';\n\nclass SkillsSection extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        };\n        this.onRemoveElement = this.onRemoveElement.bind(this);\n        this.onAddElement = this.onAddElement.bind(this);\n    }\n\n    onRemoveElement(prop, index) {\n        return _ => {\n            const list = this.props.monster[prop].filter((element, idx) => idx !== index);\n            this.props.onChange(prop)({\n                target: {\n                    value: list,\n                }\n            })\n        };\n    }\n\n    onAddElement(prop, value) {\n        return _ => {\n            const list = this.props.monster[prop].concat([value]);\n            this.props.onChange(prop)({\n                target: {\n                    value: list,\n                }\n            });\n        };\n    }\n\n    render() {\n        const {editable, monster, onChange, onChangeNumber} = this.props;\n        if(editable) {\n            return (\n                <div className='monster-form-section border-bottom'>\n                    <div className=\"column-continer\">\n                        <div className=\"row-container\">Skills <button onClick={this.onAddElement('skills', {skill: 'None', modifier: 0})} className=\"left-margin\">Add Skill</button></div> \n                        {monster.skills.map((skill, idx) => (\n                            <div className='row-container top-margin' key={idx}>\n                                <SkillSelector value={skill.skill} onChange={onChange(`skills.${idx}.skill`)}/>\n                                <input className='left-margin number-size' type='number' value={skill.modifier} onChange={onChangeNumber(`skills.${idx}.modifier`)}/>\n                                <button className='left-margin' onClick={this.onRemoveElement('skills', idx)}>Delete</button>\n                            </div>\n                        ))}\n                    </div>\n                    <div className=\"column-continer top-margin\">\n                        <div className=\"row-container\">Damage Vulnerabilities <button onClick={this.onAddElement('damageVulnerabilities', 'None')} className=\"left-margin\">Add Vulnerability</button></div> \n                        {monster.damageVulnerabilities.map((vulnerability, idx) => (\n                            <div className='row-container top-margin' key={idx}>\n                                <DamageTypeSelector value={vulnerability} onChange={onChange(`damageVulnerabilities.${idx}`)}/>\n                                <button className='left-margin' onClick={this.onRemoveElement('damageVulnerabilities', idx)}>Delete</button>\n                            </div>\n                        ))}\n                    </div>\n                    <div className=\"column-continer top-margin\">\n                        <div className=\"row-container\">Damage Resistances <button onClick={this.onAddElement('damageResistances', 'None')} className=\"left-margin\">Add Resistance</button></div> \n                        {monster.damageResistances.map((resistance, idx) => (\n                            <div className='row-container top-margin' key={idx}>\n                                <DamageTypeSelector value={resistance} onChange={onChange(`damageResistances.${idx}`)}/>\n                                <button className='left-margin' onClick={this.onRemoveElement('damageResistances', idx)}>Delete</button>\n                            </div>\n                        ))}\n                    </div>\n                    <div className=\"column-continer top-margin\">\n                        <div className=\"row-container\">Damage Immunities <button onClick={this.onAddElement('damageImmunities', 'None')} className=\"left-margin\">Add Immunity</button></div> \n                        {monster.damageImmunities.map((immunity, idx) => (\n                            <div className='row-container top-margin' key={idx}>\n                                <DamageTypeSelector value={immunity} onChange={onChange(`damageImmunities.${idx}`)}/>\n                                <button className='left-margin' onClick={this.onRemoveElement('damageImmunities', idx)}>Delete</button>\n                            </div>\n                        ))}\n                    </div>\n                    <div className=\"column-continer top-margin\">\n                        <div className=\"row-container\">Condition Immunities <button onClick={this.onAddElement('conditionImmunities', 'None')} className=\"left-margin\">Add Immunity</button></div> \n                        {monster.conditionImmunities.map((immunity, idx) => (\n                            <div className='row-container top-margin' key={idx}>\n                                <ConditionSelector value={immunity} onChange={onChange(`conditionImmunities.${idx}`)}/>\n                                <button className='left-margin' onClick={this.onRemoveElement('conditionImmunities', idx)}>Delete</button>\n                            </div>\n                        ))}\n                    </div>\n                    <textarea className='top-margin textarea-size' value={monster.senses} onChange={onChange('senses')} placeholder='Senses'/>\n                    <textarea className='top-margin textarea-size' value={monster.languages} onChange={onChange('languages')} placeholder='Languages'/>\n                    <div className='row-container top-margin'>\n                        CR:\n                        <div className='left-margin'><CRSelector value={monster.xp.toString()} onChange={onChangeNumber('xp')}/></div>\n                    </div>\n                </div>\n            );\n        }\n        return (\n            <div className='monster-form-section border-bottom'>\n                {monster.skills.length !== 0 && (\n                    <div className='row-container mm-align-left'>\n                        <span className='red-text bold-text'>Skills&nbsp;</span>\n                        <span className='red-text'>{monster.skills.map((skill, idx) => `${idx === 0 ? '' : ', '}${skill.skill} ${numberToString(skill.modifier)}`)}</span>\n                    </div>\n                )}\n                {monster.damageVulnerabilities.length !== 0 && (\n                    <div className='row-container mm-align-left'>\n                        <span className='red-text bold-text'>Damage Vulnerabilities&nbsp;</span>\n                        <span className='red-text'>{monster.damageVulnerabilities.map((vulnerability, idx) => `${idx === 0 ? '' : ', '}${vulnerability}`)}</span>\n                    </div>\n                )}\n                {monster.damageResistances.length !== 0 && (\n                    <div className='row-container mm-align-left'>\n                        <span className='red-text bold-text'>Damage Resistances&nbsp;</span>\n                        <span className='red-text'>{monster.damageResistances.map((resistance, idx) => `${idx === 0 ? '' : ', '}${resistance}`)}</span>\n                    </div>\n                )}\n                {monster.damageImmunities.length !== 0 && (\n                    <div className='row-container mm-align-left'>\n                        <span className='red-text bold-text'>Damage Immunities&nbsp;</span>\n                        <span className='red-text'>{monster.damageImmunities.map((immunity, idx) => `${idx === 0 ? '' : ', '}${immunity}`)}</span>\n                    </div>\n                )}\n                {monster.conditionImmunities.length !== 0 && (\n                    <div className='row-container mm-align-left'>\n                        <span className='red-text bold-text'>Condition Immunities&nbsp;</span>\n                        <span className='red-text'>{monster.conditionImmunities.map((immunity, idx) => `${idx === 0 ? '' : ', '}${immunity}`)}</span>\n                    </div>\n                )}\n                {monster.senses !== '' && monster.senses != null && (\n                    <div className='mm-align-left'>\n                        <span className='red-text bold-text'>Senses&nbsp;</span>\n                        <span className='red-text'>{monster.senses}</span>\n                    </div>\n                )}\n                {monster.languages !== '' && monster.languages != null && (\n                    <div className='mm-align-left'>\n                        <span className='red-text bold-text'>Languages&nbsp;</span>\n                        <span className='red-text'>{monster.languages}</span>\n                    </div>\n                )}\n                <div className='mm-align-left'>\n                        <span className='red-text bold-text'>Challenge&nbsp;</span>\n                        <span className='red-text'>{`${calculateCR(monster.xp)} (${monster.xp} XP)`}</span>\n                </div>\n\n            </div>\n        );\n    }\n};\n\nSkillsSection.propTypes = {\n    onChange: PropTypes.func.isRequired,\n    onChangeNumber: PropTypes.func.isRequired,\n    monster: PropTypes.shape({}).isRequired,\n    editable: PropTypes.bool.isRequired\n}\n\nSkillsSection.defaultProps = {\n}\n\nexport default SkillsSection;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MonsterModal.css';\n\nclass AbilitiesSection extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        };\n        this.onRemoveElement = this.onRemoveElement.bind(this);\n        this.onAddElement = this.onAddElement.bind(this);\n    }\n\n    onRemoveElement(prop, index) {\n        return _ => {\n            const list = this.props.monster[prop].filter((element, idx) => idx !== index);\n            this.props.onChange(prop)({\n                target: {\n                    value: list,\n                }\n            })\n        };\n    }\n\n    onAddElement(prop, value) {\n        return _ => {\n            const list = this.props.monster[prop].concat([value]);\n            this.props.onChange(prop)({\n                target: {\n                    value: list,\n                }\n            });\n        };\n    }\n\n    render() {\n        const {editable, monster, onChange} = this.props;\n        if(editable) {\n            return (\n                <div className='monster-form-section border-bottom'>\n                    <div className='row-container'>\n                        Abilities: <button className='left-margin' onClick={this.onAddElement('abilities', {name: '', descr: ''})}>Add Ability</button>\n                    </div>\n                    {monster.abilities.map((ability, idx) => (\n                        <div key={idx} className='row-container top-margin'>\n                            <input type='text' placeholder='Ability Name' value={ability.name} onChange={onChange(`abilities.${idx}.name`)}/>\n                            <textarea className='left-margin textarea-size' placeholder='Ability Description' value={ability.descr} onChange={onChange(`abilities.${idx}.descr`)}/>\n                            <button className='left-margin' onClick={this.onRemoveElement('abilities', idx)}>Delete</button>\n                        </div>\n                    ))}\n                </div>\n            );\n        } else if (monster.abilities.length === 0) {\n            console.log('No abilities');\n            return null;\n        }\n        return (\n            <div className='monster-form-section border-bottom mm-align-left'>\n                {monster.abilities.map((ability, idx) => (\n                    <div key={idx}>\n                        <span className='bold-text'>{ability.name}&nbsp;</span>\n                        <span>{ability.descr}</span>\n                    </div>\n                ))}\n            </div>\n        );\n    }\n};\n\nAbilitiesSection.propTypes = {\n    onChange: PropTypes.func.isRequired,\n    monster: PropTypes.shape({}).isRequired,\n    editable: PropTypes.bool.isRequired\n}\n\nAbilitiesSection.defaultProps = {\n}\n\nexport default AbilitiesSection;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MonsterModal.css';\n\nclass ActionsSection extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        };\n        this.onRemoveElement = this.onRemoveElement.bind(this);\n        this.onAddElement = this.onAddElement.bind(this);\n    }\n\n    onRemoveElement(prop, index) {\n        return _ => {\n            const list = this.props.monster[prop].filter((element, idx) => idx !== index);\n            this.props.onChange(prop)({\n                target: {\n                    value: list,\n                }\n            })\n        };\n    }\n\n    onAddElement(prop, value) {\n        return _ => {\n            const list = this.props.monster[prop].concat([value]);\n            this.props.onChange(prop)({\n                target: {\n                    value: list,\n                }\n            });\n        };\n    }\n\n    render() {\n        const {editable, monster, onChange} = this.props;\n        if(editable) {\n            return (\n                <div className='monster-form-section border-bottom'>\n                    <div className='row-container'>\n                        Actions: <button className='left-margin' onClick={this.onAddElement('actions', {name: '', descr: ''})}>Add Action</button>\n                    </div>\n                    {monster.actions.map((action, idx) => (\n                        <div key={idx} className='row-container top-margin'>\n                            <input type='text' placeholder='Action Name' value={action.name} onChange={onChange(`actions.${idx}.name`)}/>\n                            <textarea className='left-margin textarea-size' placeholder='Action Description' value={action.descr} onChange={onChange(`actions.${idx}.descr`)}/>\n                            <button className='left-margin' onClick={this.onRemoveElement('actions', idx)}>Delete</button>\n                        </div>\n                    ))}\n                </div>\n            );\n        } else if(monster.actions.length === 0) {\n            return null;\n        }\n        return (\n            <div className='monster-form-section border-bottom'>\n                <div className='red-text bold-text'>Actions</div>\n                {monster.actions.map((action, idx) => (\n                    <div className='top-margin mm-align-left' key={idx}>\n                        <span className='bold-text'>{action.name}&nbsp;</span>\n                        <span>{action.descr}</span>\n                    </div>\n                ))}\n            </div>\n        );\n    }\n};\n\nActionsSection.propTypes = {\n    onChange: PropTypes.func.isRequired,\n    monster: PropTypes.shape({}).isRequired,\n    editable: PropTypes.bool.isRequired\n}\n\nActionsSection.defaultProps = {\n}\n\nexport default ActionsSection;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { property } from 'underscore';\n\nimport './MonsterModal.css';\n\nclass ActionsSection extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        };\n        this.onRemoveElement = this.onRemoveElement.bind(this);\n        this.onAddElement = this.onAddElement.bind(this);\n    }\n\n    onRemoveElement(prop, index) {\n        return _ => {\n            const list = (property(prop.split('.'))(this.props.monster)).filter((element, idx) => idx !== index);\n            this.props.onChange(prop)({\n                target: {\n                    value: list,\n                }\n            })\n        };\n    }\n\n    onAddElement(prop, value) {\n        return _ => {\n            const list = (property(prop.split('.'))(this.props.monster)).concat([value]);\n            this.props.onChange(prop)({\n                target: {\n                    value: list,\n                }\n            });\n        };\n    }\n\n    render() {\n        const {editable, monster, onChange} = this.props;\n        console.log(monster.legendaryActions);\n        /*if(monster.legendaryActions.actions === []) {\n            return null;\n        }*/\n        if(editable) {\n            return (\n                <div className='monster-form-section border-bottom'>\n                    <div className='row-container'>\n                        Legendary Actions: <button className='left-margin' onClick={this.onAddElement('legendaryActions.actions', {name: '', descr: ''})}>Add Action</button>\n                    </div>\n                    <textarea className='top-margin textarea-size' placeholder='Legendary Action Summary and Restrictions' onChange={onChange('legendaryActions.summary')} value={monster.legendaryActions.summary}/>\n                    {monster.legendaryActions.actions.map((action, idx) => (\n                        <div key={idx} className='row-container top-margin'>\n                            <input placeholder='Action Name' type='text' value={action.name} onChange={onChange(`legendaryActions.actions.${idx}.name`)}/>\n                            <textarea className='left-margin textarea-size' placeholder='Action Description' value={action.descr} onChange={onChange(`legendaryActions.actions.${idx}.descr`)}/>\n                            <button className='left-margin' onClick={this.onRemoveElement('legendaryActions.actions', idx)}>Delete</button>\n                        </div>\n                    ))}\n                </div>\n            );\n        } else if(monster.legendaryActions.actions.length === 0) {\n            return null;\n        }\n        return (\n            <div className='monster-form-section border-bottom'>\n                <div className='red-text bold-text'>Legendary Actions</div>\n                <div>{monster.legendaryActions.summary}</div>\n                {monster.legendaryActions.actions.map((action, idx) => (\n                    <div className='top-margin mm-align-left' key={idx}>\n                        <span className='bold-text'>{action.name}&nbsp;</span>\n                        <span>{action.descr}</span>\n                    </div>\n                ))}\n            </div>\n        );\n    }\n};\n\nActionsSection.propTypes = {\n    onChange: PropTypes.func.isRequired,\n    monster: PropTypes.shape({}).isRequired,\n    editable: PropTypes.bool.isRequired\n}\n\nActionsSection.defaultProps = {\n}\n\nexport default ActionsSection;","import React, { Component } from 'react';\nimport ImageUploader from 'react-images-upload';\nimport PropTypes from 'prop-types';\nimport { noop } from 'underscore';\nimport { getMonsterImage } from '../../data-store/MonsterImages';\n\nimport './MonsterModal.css';\n\nclass MonsterImageSection extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            pictureURL: null,\n            loadingImage: false,\n        };\n        this.onDrop = this.onDrop.bind(this);\n    }\n\n    componentDidMount() {\n        const { monster } = this.props;\n        if(monster.imageKey != null) {\n            getMonsterImage(monster.imageKey).then(result => {\n                this.setState({\n                    pictureURL: result,\n                })\n            }).catch(e => {\n                monster.imageKey = null;\n            });\n            this.setState({\n                loadingImage: true,\n            });\n        }\n    }\n\n    onDrop(picture) {\n        const reader = new FileReader();\n        reader.onload = _ => {\n            this.props.onImageSet(reader.result);\n            this.setState({\n                pictureURL: reader.result,\n                loadingImage: false,\n            });\n        }\n        reader.readAsDataURL(picture[0]);\n        this.setState({\n            loadingImage: true,\n        })\n    }\n\n    render() {\n        const { loadingImage, pictureURL } = this.state;\n        if(!loadingImage && pictureURL == null) {\n            return (\n                <ImageUploader\n                    withIcon={true}\n                    buttonText='Choose images'\n                    onChange={this.onDrop}\n                    imgExtension={['.jpg', '.jpeg', '.gif', '.png', '.gif']}\n                    maxFileSize={5242880}\n                />\n            );\n        }\n        return (\n            <div className=\"row-container center-container\">\n                <img style={{maxHeight: '20em'}} alt=\"Loading...\" src={pictureURL}/>\n            </div>\n        );\n    }\n};\n\nMonsterImageSection.propTypes = {\n    monster: PropTypes.shape({}).isRequired,\n    onImageSet: PropTypes.func,\n}\n\nMonsterImageSection.defaultProps = {\n    onImageSet: noop,\n}\n\nexport default MonsterImageSection;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MonsterModal.css';\n\nconst DescriptionSection = ({ onChange, monster, editable }) => {\n    if(editable) {\n        return (\n            <div className='monster-form-section border-bottom'>\n                <div>Description:</div>\n                <textarea className='textarea-size top-margin' onChange={onChange('description')} value={monster.description}/>\n            </div>\n        );\n    }\n    return (\n        <div className='monster-form-section border-bottom mm-align-left'>\n            <span>{monster.description}</span>\n        </div>\n    );\n};\n\nDescriptionSection.propTypes = {\n    onChange: PropTypes.func.isRequired,\n    monster: PropTypes.shape({}).isRequired,\n    editable: PropTypes.bool.isRequired\n}\n\nDescriptionSection.defaultProps = {\n}\n\nexport default DescriptionSection;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { noop, clone } from 'underscore';\nimport SimpleModal from '../../modals/SimpleModal';\nimport NameSection from './NameSection';\nimport CombatSection from './CombatSection';\nimport StatSection from './StatSection';\nimport SkillsSection from './SkillsSection';\nimport AbilitiesSection from './AbilitiesSection';\nimport ActionsSection from './ActionsSection';\nimport LegendaryActionsSection from './LegendaryActionsSection';\nimport MonsterImageSection from './MonsterImageSection';\nimport DescriptionSection from './DescriptionSection';\n\nimport './MonsterModal.css';\n\nconst setPathValue = (object, path, value) => {\n    const splitPath = path.split(\".\");\n    let location = object;\n    for(let i = 0; i < splitPath.length; i++) {\n        const currentPath = splitPath[i];\n        if(i === splitPath.length -1) {\n            location[currentPath] = value;\n        } else {\n            if(location[currentPath] == null) {\n                location[currentPath] = {};\n            }\n            location = location[currentPath];\n        }\n    }\n}\n\nclass MonsterModal extends Component {\n    constructor(props) {\n        super(props);\n        this.onChange = this.onChange.bind(this);\n        this.onChangeNumber = this.onChangeNumber.bind(this);\n    }\n\n    onChange(path) {\n        const { monster } = this.props;\n        return event => {\n            const value = event.target.value;\n            const newMonster = clone(monster);\n            setPathValue(newMonster, path, value);\n            this.props.onMonsterChange(newMonster);\n        }\n    }\n\n    onChangeNumber(path) {\n        const { monster } = this.props;\n        return event => {\n            const value = parseInt(event.target.value);\n            const newMonster = clone(monster);\n            setPathValue(newMonster, path, value);\n            this.props.onMonsterChange(newMonster);\n        }\n    }\n\n    render() {\n        const { editable, show, monster, onSave, onCancel, onDelete, onImageSet, onToggleEdit } = this.props;\n        if(monster == null) {\n            return null;\n        }\n        return (\n            <SimpleModal show={show}>\n                <div className='monster-form'>\n                    <NameSection editable={editable} monster={monster} onChange={this.onChange}/>\n                    <CombatSection editable={editable} monster={monster} onChangeNumber={this.onChangeNumber} />\n                    <StatSection editable={editable} monster={monster} onChangeNumber={this.onChangeNumber}/>\n                    <SkillsSection editable={editable} monster={monster} onChange={this.onChange} onChangeNumber={this.onChangeNumber} />\n                    <AbilitiesSection editable={editable} monster={monster} onChange={this.onChange} />\n                    <ActionsSection editable={editable} monster={monster} onChange={this.onChange} />\n                    <LegendaryActionsSection editable={editable} monster={monster} onChange={this.onChange} />\n                    <DescriptionSection editable={editable} monster={monster} onChange={this.onChange} />\n                    <div className='monster-form-section'>\n                        <MonsterImageSection monster={monster} onImageSet={onImageSet}/>\n                    </div>\n                    { editable ? (\n                    <div className='row-container-space-between top-margin'>\n                        <button onClick={onSave}>Save</button>\n                        {monster.id != null && <button onClick={onDelete}>Delete</button>}\n                        <button onClick={onCancel}>Cancel</button>\n                    </div>) :\n                    <div className='row-container-space-between top-margin'>\n                        {onToggleEdit !== noop && <button onClick={onToggleEdit}>Edit</button>}\n                        <button onClick={onCancel}>Close</button>\n                    </div>\n                    }\n\n                </div>\n\n            </SimpleModal>\n        );\n    }\n}\n\nMonsterModal.propTypes = {\n    monster: PropTypes.shape({\n\n    }),\n    editable: PropTypes.bool,\n    show: PropTypes.bool.isRequired,\n    onSave: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired,\n    onDelete: PropTypes.func,\n    onImageSet: PropTypes.func,\n    onToggleEdit: PropTypes.func,\n};\n\nMonsterModal.defaultProps = {\n    monster: null,\n    editable: false,\n    onMonsterChange: noop,\n    onDelete: noop,\n    onImageSet: noop,\n    onToggleEdit: noop,\n};\n\nexport default MonsterModal;\n","import React, { Component } from 'react';\nimport MoonLoader from 'react-spinners/MoonLoader';\nimport { getAllMonsters, buildEmptyMonster, buildMonsterId, addMonster, removeMonsterById } from '../data-store/Monsters';\nimport { addMonsterImage, removeMonsterImageById } from '../data-store/MonsterImages';\nimport MonsterViewerHeader from './MonsterViewerHeader';\nimport MonsterModal from './modal/MonsterModal';\nimport { calculateCR } from './UnitConversionCalculator';\n\nimport './MonsterViewer.css';\n\nconst sortMonsterList = monsterList => {\n    return monsterList.sort((a, b) => {\n        const nameA = a.id.toUpperCase(); // ignore upper and lowercase\n        const nameB = b.id.toUpperCase(); // ignore upper and lowercase\n        if (nameA < nameB) {\n            return -1;\n        } else if (nameA > nameB) {\n            return 1;\n        }\n        return 0;\n    });\n}\n\nclass MonsterViewer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            monsterList: [],\n            loading: true,\n            selectedMonster: null,\n            imageURL: null,\n            filterXp: null,\n            filterName: null,\n            editing: false,\n        };\n        this.onAddMonster = this.onAddMonster.bind(this);\n        this.onImageSet = this.onImageSet.bind(this);\n        this.onMonsterChange = this.onMonsterChange.bind(this);\n        this.changeMonster = this.changeMonster.bind(this);\n        this.onDeleteMonster = this.onDeleteMonster.bind(this);\n        this.saveMonsterModel = this.saveMonsterModel.bind(this);\n        this.cancelMonsterModal = this.cancelMonsterModal.bind(this);\n        this.changeXPFilter = this.changeXPFilter.bind(this);\n        this.changeNameFilter = this.changeNameFilter.bind(this);\n        this.onToggleEdit = this.onToggleEdit.bind(this);\n    }\n\n    onAddMonster() {\n        this.setState({\n            selectedMonster: buildEmptyMonster(),\n            imageURL: null,\n            editing: true,\n        });\n    }\n\n    onImageSet(imageURL) {\n        this.setState({\n            imageURL,\n        })\n    }\n\n    onToggleEdit() {\n        this.setState({\n            editing: true,\n        })\n    }\n\n    onMonsterChange(monster) {\n        this.setState({\n            selectedMonster: monster,\n        });\n    }\n\n    changeMonster(monster) {\n        return _ => this.onMonsterChange(monster);\n    }\n\n    cancelMonsterModal() {\n        this.setState({\n            selectedMonster: null,\n            imageURL: null,\n            editing: false\n        });\n    }\n\n    onDeleteMonster() {\n        const monster = this.state.selectedMonster;\n        let { monsterList } = this.state;\n        monsterList = monsterList.filter(mon => mon.id !== monster.id);\n        if(monster.imageKey) {\n            removeMonsterImageById(monster.imageKey);\n        }\n        removeMonsterById(monster.id);\n        this.setState({\n            selectedMonster: null,\n            monsterList: sortMonsterList(monsterList),\n            imageURL: null,\n            editing: false,\n        });\n    }\n\n    saveMonsterModel() {\n        const monster = this.state.selectedMonster;\n        let { monsterList, imageURL } = this.state;\n        if(monster.id == null) {\n            buildMonsterId(monster);\n            monsterList = monsterList.concat([monster])\n            if(imageURL) {\n                console.log('saving image');\n                addMonsterImage(imageURL).then(id => {\n                    console.log('id', id);\n                    monster.imageKey = id;\n                    addMonster(monster);\n                })\n            } else {\n                addMonster(monster);\n            }\n        } else {\n            const oldId = monster.id;\n            monsterList = monsterList.filter(mon => mon.id !== monster.id);\n            buildMonsterId(monster);\n            monsterList = monsterList.concat([monster]);\n            removeMonsterById(oldId).then(_ => addMonster(monster));\n        }\n        this.setState({\n            selectedMonster: null,\n            monsterList: sortMonsterList(monsterList),\n            imageURL: null,\n            editing: false,\n        });\n    }\n\n    componentDidMount(props) {\n        getAllMonsters().then(monsterList => {\n            this.setState({\n                monsterList: sortMonsterList(monsterList),\n                loading: false,\n            });\n        }).catch(error => {\n            console.error(error);\n        });\n    }\n\n    changeNameFilter(event) {\n        const filterName = event.target.value;\n        this.setState({\n            filterName,\n        });\n    }\n\n    changeXPFilter(event) {\n        const xp = event.target.value;\n        this.setState({\n            filterXp: xp === '' ? null : parseInt(xp),\n        });\n    }\n\n    render() {\n        const { monsterList, loading, selectedMonster, filterName, filterXp, editing } = this.state;\n        const showSelectedMonster = selectedMonster != null;\n        const formattedFilterName = filterName == null || filterName === '' ? null : filterName.toUpperCase();\n        return (\n        <div className='mv-view'>\n            <MonsterViewerHeader\n                filterXp={filterXp}\n                filterName={filterName}\n                onAddMonster={this.onAddMonster}\n                onNameFilter={this.changeNameFilter}\n                onXPFilter={this.changeXPFilter}\n            />\n            <MonsterModal\n                monster={selectedMonster}\n                show={showSelectedMonster}\n                onSave={this.saveMonsterModel}\n                onCancel={this.cancelMonsterModal}\n                onMonsterChange={this.onMonsterChange}\n                onImageSet={this.onImageSet}\n                onDelete={this.onDeleteMonster}\n                editable={editing}\n                onToggleEdit={this.onToggleEdit}\n            />\n            {monsterList.filter(monster => {\n                const nameMatch = formattedFilterName == null || monster.name.toUpperCase().indexOf(formattedFilterName) >= 0;\n                const xpMatch = filterXp == null || monster.xp === filterXp;\n                return xpMatch && nameMatch;\n            }).map(monster => (\n                <div className='mv-monster' key={monster.id} onClick={this.changeMonster(monster)}>\n                    {`${monster.name} CR ${calculateCR(monster.xp)}`}\n                </div>\n            ))}\n        </div>\n        );\n    }\n}\n\nexport default MonsterViewer;\n","import React from 'react';\nimport MonsterViewer from './components/monsters/MonsterViewer';\n\nconst rootMenu = {\n    'Monster Viewer' : <MonsterViewer/>,\n};\n\nexport default rootMenu;","import React, { Component } from 'react';\nimport MoonLoader from 'react-spinners/MoonLoader';\nimport Menu from './components/menu/Menu';\nimport rootMenu from './RootMenu';\nimport { openDatabase } from './components/data-store/IndexedDB';\n\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentLocation: null,\n      databaseLoaded: false,\n    };\n    this.getDisplayElement = this.getDisplayElement.bind(this);\n    this.backToRootMenu = this.backToRootMenu.bind(this);\n    this.menuSelection = this.menuSelection.bind(this);\n  }\n\n  componentDidMount(props) {\n    openDatabase().then(_ => {\n      console.log('App DataStore opened');\n      this.setState({\n        databaseLoaded: true,\n      })\n    });\n  }\n\n  menuSelection(value) {\n    return _ => {\n      this.setState({\n        currentLocation: value\n      });\n    };\n  }\n\n  getDisplayElement() {\n    const { currentLocation } = this.state;\n    if(!currentLocation) {\n      return <Menu menuItems={Object.keys(rootMenu)} onSelect={this.menuSelection}/>;\n    }\n    return rootMenu[currentLocation];\n\n  }\n\n  backToRootMenu() {\n    this.setState({\n      currentLocation: null\n    });\n  }\n  render() {\n    const displayElement = this.getDisplayElement();\n    const { currentLocation, databaseLoaded } = this.state;\n    if(!databaseLoaded) {\n      return (\n        <div className=\"App\">\n          <MoonLoader\n            sizeUnit={'vmin'}\n            size={33}\n            loading={!databaseLoaded}\n          />\n        </div>\n      );\n    }\n    return (\n      <div className=\"App\">\n        {currentLocation != null && <button onClick={this.backToRootMenu}>Menu</button>}\n        {displayElement}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}